///count of connected component///
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define endl '\n'
vector<int>v[1000];
int vis[10000];

void dfs(int node){

   vis[node]=1;
   for(auto child:v[node]){
      if(vis[child]==0){
          dfs(child);
      }
   }

 }
int main(){

   int n,e;cin>>n>>e;
   while(e--){
       int n1,n2;cin>>n1>>n2;
       v[n1].push_back(n2);
       v[n2].push_back(n1);
   }
   int cnt=0;
   for(int i=1;i<=n;i++){
      if(vis[i]==0){
          cnt++;
          dfs(i);
      }
   }

   cout<<cnt<<endl;


}

*/



///Print each connected components///


#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define endl '\n'
vector<int>v[1000];
int vis[10000];

void dfs(int node,vector<int>&components){

   vis[node]=1;
   components.push_back(node);
   for(auto child:v[node]){
      if(vis[child]==0){
          dfs(child,components);
      }
   }

 }
int main(){

   int n,e;cin>>n>>e;
   while(e--){
       int n1,n2;cin>>n1>>n2;
       v[n1].push_back(n2);
       v[n2].push_back(n1);
   }
   int cnt=0;
   vector<vector<int>>allcomponents;
   for(int i=1;i<=n;i++){
      if(vis[i]==0){
          cnt++;
          vector<int>v1;
          dfs(i,v1);

          allcomponents.push_back(v1);
      }
   }

   cout<<cnt<<endl;

   for(int i=0;i<allcomponents.size();i++){
        cout << "Component " << i + 1 << ": ";
       for(auto u:allcomponents[i]){
          cout<<u<<" ";
       }

       cout<<endl;
   }

   return 0;

}



/*
for example:
        10 7
        1 2
        1 3
        3 4
        3 5
        6 7
        8 9
        8 10
        
        
 Output:
3
Component 1: 1 2 3 4 5
Component 2: 6 7
Component 3: 8 9 10


*/
